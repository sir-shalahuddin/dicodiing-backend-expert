name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.PGUSER_TEST }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD_TEST }}
          POSTGRES_DB: ${{ secrets.PGDATABASE_TEST }}
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Wait for PostgreSQL to be ready
      run: |
        count=0
        max_retries=12 # 1 minute (10s interval)
        until PGPASSWORD="${{ secrets.PGPASSWORD_TEST }}" psql -h localhost -U "${{ secrets.PGUSER_TEST }}" -d "${{ secrets.PGDATABASE_TEST }}" -c '\q' || [ $count -eq $max_retries ]; do
            >&2 echo "PostgreSQL is unavailable - sleeping"
            count=$((count+1))
            sleep 5
        done
        if [ $count -eq $max_retries ]; then
            >&2 echo "PostgreSQL was not ready within the given timeframe"
            exit 1
        fi
    - name: npm install migrate and test
      run: |
        npm install
        npm run migrate up
        npm run test
      env:
        CI: true
        PGHOST_TEST: localhost
        PGUSER_TEST: ${{ secrets.PGUSER_TEST }}
        PGDATABASE_TEST: ${{ secrets.PGDATABASE_TEST }}
        PGPASSWORD_TEST: ${{ secrets.PGPASSWORD_TEST }}
        PGPORT_TEST: '5432'
        ACCESS_TOKEN_KEY: ${{ secrets.ACCESS_TOKEN_KEY }}
        REFRESH_TOKEN_KEY: ${{ secrets.REFRESH_TOKEN_KEY }}
